{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","title","year","summary","poster","genres","to","pathname","state","src","alt","style","backgroundColor","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Navigation","Detail","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"ySAkBeA,MAff,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAW,mBAAhB,UACI,sIAKA,6D,gFC8BGC,MApCf,YAA2D,EAA3CC,GAA4C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC9C,OACI,qBAAKP,UAAY,QAAjB,SACI,eAAC,IAAD,CACAQ,GAAI,CACAC,SAAU,gBACVC,MAAM,CAACN,OAAMD,QAAOE,UAASC,SAAQC,WAHzC,UAMI,qBAAKI,IAAOL,EAAQM,IAAKT,EAAOA,MAAOA,IACvC,sBAAKH,UAAY,cAAjB,UACI,oBAAIA,UAAY,eAAea,MAAO,CAACC,gBAAgB,OAAvD,SACKX,IAEL,oBAAIH,UAAY,cAAhB,SAA+BI,IAC/B,oBAAIJ,UAAY,gBAAhB,SACKO,EAAOQ,KAAI,SAACC,EAAOC,GAChB,OAAO,oBAAkBjB,UAAY,eAA9B,SAA8CgB,GAAnCC,QAG1B,oBAAGjB,UAAY,iBAAf,UAAiCK,EAAQa,MAAM,EAAG,KAAlD,kBC8BLC,G,kNAjDbT,MAAQ,CACNU,WAAW,EACXC,OAAO,I,EAKTC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGAJ,EAHA,EAERK,KACEA,KAAML,OAGV,EAAKM,SAAS,CAACN,SAAQD,WAAW,IANxB,2C,uDASZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA4BM,KAAKlB,MAA1BU,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OACE,yBAASrB,UAAY,YAArB,SACCoB,EACC,qBAAKpB,UAAY,SAAjB,SACE,sBAAMA,UAAY,eAAlB,0BAGA,qBAAKA,UAAY,SAAjB,SACKqB,EAAON,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,CAEI3B,GAAM2B,EAAM3B,GACZE,KAAQyB,EAAMzB,KACdD,MAAS0B,EAAM1B,MACfE,QAAWwB,EAAMxB,QACjBC,OAAUuB,EAAMC,mBAChBvB,OAAUsB,EAAMtB,QANTsB,EAAM3B,e,GAjCd6B,IAAMC,Y,MCqBVC,MAvBf,WACI,OACI,sBAAKjC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMQ,GAAI,IAAV,mBACA,cAAC,IAAD,CAAMA,GAAK,SAAX,uBCDG0B,MALf,SAAgBrC,GAEZ,OADAC,QAAQC,IAAIF,GACL,0CCkBIsC,MAbf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAanB,IAC1C,cAAC,IAAD,CAAOiB,KAAK,SAASE,UAAW1C,IAChC,cAAC,IAAD,CAAOwC,KAAK,gBAAgBE,UAAWJ,QCX7CK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f275dff9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n    return (\r\n        <div className= 'about__container'>\r\n            <span>\r\n                \"Freefom is thr freedom to say that two plus two make four. if \r\n                that is granted, all else\r\n                follows.\"\r\n            </span>\r\n            <span>- George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*Movie Api를 작업하는 컴포넌트 */\r\nfunction Movie({id, title, year, summary, poster, genres}) {\r\n    return (\r\n        <div className = \"movie\">\r\n            <Link \r\n            to={{\r\n                pathname: '/movie-detail',\r\n                state:{year, title, summary, poster, genres},\r\n            }}\r\n            >\r\n                <img src = {poster} alt={title} title={title}/>\r\n                <div className = 'movie__data'>\r\n                    <h3 className = 'movie__title' style={{backgroundColor:'red'}}>\r\n                        {title}\r\n                    </h3>\r\n                    <h5 className = 'movie__year'>{year}</h5>\r\n                    <ul className = \"movie__genres\">\r\n                        {genres.map((genre, index) => {\r\n                            return <li key = {index} className = \"movie__genre\">{genre}</li>\r\n                        })}\r\n                    </ul>\r\n                    <p className = 'movie__summary'>{summary.slice(0, 180)}...</p>\r\n                </div>\r\n            </Link>\r\n        </div>  \r\n    );\r\n}\r\n\r\nMovie.propTypes = { \r\n    id: PropTypes.number.isRequired, // API에서 넘어오는 id 숫자\r\n    year: PropTypes.number.isRequired, // year 숫자\r\n    title: PropTypes.string.isRequired, // 제목은 물자열\r\n    summary: PropTypes.string.isRequired, // 요약 문자열\r\n    poster: PropTypes.string.isRequired, // 포스터에는 이미지 주소(문자열)이 저장\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;","import React from 'react'; \r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n<meta name=\"referrer\" content=\"no-referrer\" />\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies:[]\r\n  };\r\n  /* 자바스크립트에게 getMovies함수는 시간이 필요하기 위해서는 \r\n  axios.get()의 실행을 기다려 달라고 말하기 위해 await를 사용하였다. */\r\n  \r\n  getMovies = async () => {// eslint-disable-next-line\r\n    const{\r\n      data: {\r\n        data:{movies},\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n    this.setState({movies, isLoading: false});\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n\r\n  render(){\r\n    const {isLoading, movies} = this.state;\r\n    return(\r\n      <section className = \"container\">\r\n      {isLoading? (\r\n        <div className = 'loader'>\r\n          <span className = \"loader__text\">Loading...</span>\r\n        </div>\r\n      ):(\r\n          <div className = \"movies\">\r\n              {movies.map((movie) => (\r\n                <Movie\r\n                    key = {movie.id}\r\n                    id = {movie.id}\r\n                    year = {movie.year}\r\n                    title = {movie.title}\r\n                    summary = {movie.summary}\r\n                    poster = {movie.medium_cover_image}\r\n                    genres = {movie.genres}\r\n                  />\r\n            ))}\r\n          </div>\r\n        )\r\n      }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() {\r\n    return(\r\n        <div className='nav'>\r\n            <Link to ='/'> Home</Link>\r\n            <Link to = '/about'>About</Link>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\n/*\r\nfunction Navigation() {\r\n    return(\r\n        <div>\r\n            <a href='/'>Home</a>\r\n            <a href='/about'>About</a>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n */\r\nexport default Navigation;","import React from 'react';\r\n\r\nfunction Detail(props) {\r\n    console.log(props);\r\n    return <span>hello</span>;\r\n}\r\n\r\nexport default Detail;","import React from 'react';\n//import Home from './routes/Home';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path='/' exact={true} component = {Home}/> \n      <Route path='/about' component={About} /> \n      <Route path='/movie-detail' component={Detail}/>\n    </HashRouter>\n  );  /* localhost:3000/#/about */\n  /*Route 컴포넌트에 전달한 path props를 보고 component props에 지정한 About 컴포넌트를 \n  그려준거임 */\n}\n\nexport default App; \n\n\n/*HashRouter와 Route 컴포넌트 사용하기 \nHashRouter Route 컴포너트를 임포트한 다음 HashRouter 커포넌트가 \nRoute컴포넌트를 감싸 반환하도록 App.js를 수정하였다. */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')); // App 컴포넌트를 아이디가 root 인 엘리먼트에 그린다. -> 이 엘리먼트가 index.html로 전달 하게 되는것\n\n"],"sourceRoot":""}